.box {
    display: grid;
    grid-template-columns: 75px 1fr ;
    width: 100%;
    padding: 1rem;
    $border: 1px solid var(--gray2);
    border-top: $border;
    border-left: $border;
    border-right: $border;

    &:not(:has(~.box)) {
        border-bottom: $border;
    }
    &:hover {
        background-color: var(--gray1);
        text-decoration: none;
    }
    >.box {
        grid-column: span 3;
        margin-top: 1.5rem;
        border-radius: 0.75rem;
        &:hover {
            filter: brightness(1.2);
        }
    }
}
.reply ~ .box {
    border-top: none;
    position: relative;
    &::before {
        content: "";
        position: absolute;
        z-index: 0;
        height: 5rem;
        width: 1px;
        top: 0;
        left: calc(1rem + 25px);
        translate: -50% -50%;
        background-color: white;
    }
}
.avatar {
    grid-row: span 2;
    width: 75px;
    display: flex;
    flex-shrink: 0;
    img {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        object-fit: cover;
        z-index: 5;
    }
}
.div {
    flex-grow: 1;
}
.header {
    height: 1.5rem;
    display: flex;
    justify-content: space-between;
    align-items: start;
}

.date {
    color: var(--gray2);
}
.displayName {
    color: var(--gray2);
}
.username {
    font-weight: bold;
}
.content {
    padding-bottom: 0.75rem;
}

.special {
    color: var(--blue1) !important
}

.btns {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.action {
    --color: white;
    display: flex;
    align-items: center;
    position: relative;
    &.highlight {
        color: var(--color);
        fill: var(--color);
    }
    svg {
        height: 1.5rem;
        width: 1.5rem;
    }
    &::after {
        content: "";
        position: absolute;
        height: 2.5rem;
        width: 2.5rem;
        opacity: 0;
        border-radius: 50%;
        scale: 1.5;
        transition: opacity 50ms ease;
    }
    &:hover {
        text-shadow: 0 0 10px var(--color);
        color: var(--color);
        &::after {
            background: radial-gradient(var(--color), transparent);
            opacity: 0.1;
        }
    }
}